name: Build CLI and GUI

on:
  workflow_call:
    inputs:
      os:
        type: string
        required: true
      arch:
        type: string
        required: true
      platform:
        type: string
        required: true
jobs:
  cli:
    runs-on: ubuntu-latest
    env:
      ext: ${{inputs.os=='windows' && '.exe' || ''}}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: cli/go.mod
          cache-dependency-path: |
            cli/go.sum
            common/go.sum
      - name: Install dependencies common
        run: go get .
        working-directory: common 
      - name: Install dependencies cli
        run: go get .
        working-directory: cli
      - name: Build ${{ inputs.os }}/${{inputs.arch}}
        env:
          GOOS: ${{ inputs.os }}
          GOARCH: ${{ inputs.arch }}
        run: go build -o ../keyboard_layout_calculator_${{ inputs.os }}_${{inputs.arch}}${{env.ext}}
        working-directory: cli
      - uses: actions/upload-artifact@v4
        with:
          name: keyboard_layout_calculator_cli_${{ inputs.os }}_${{inputs.arch}}
          path: ./keyboard_layout_calculator_*
  gui:
    runs-on: ${{inputs.platform}}
    env:
      gogio_target: ${{inputs.os=='darwin' && 'macos' || inputs.os}}
      ext: ${{inputs.os=='darwin' && '.app' || (inputs.os=='windows' && '.exe' || '')}}
    steps:
      - uses: actions/checkout@v4
      - if: ${{inputs.os=='linux'}}
        name: Update dependencies
        run: sudo apt-get update
      - if: ${{inputs.os=='linux'}}
        name: Install specific dependencies
        run: sudo apt install gcc pkg-config libwayland-dev libx11-dev libx11-xcb-dev libxkbcommon-x11-dev libgles2-mesa-dev libegl1-mesa-dev libffi-dev libxcursor-dev libvulkan-dev
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: gui/go.mod
          cache-dependency-path: |
            gui/go.sum
            common/go.sum
      - if: ${{env.gogio_target != 'linux'}}
        name: Install gogio tool
        run: go install gioui.org/cmd/gogio@latest
      - name: Install dependencies common
        run: go get .
        working-directory: common 
      - name: Install dependencies gui
        run: go get .
        working-directory: gui
      - if: ${{env.gogio_target != 'linux'}}
        name: Build
        run: |
          gogio -target=${{env.gogio_target}} -arch=${{ inputs.arch }} -o ../KeyboardLayoutCalculator_${{inputs.os}}_${{inputs.arch}}${{env.ext}} . 
        working-directory: gui
      - if: ${{env.gogio_target == 'linux'}}
        name: Build
        env:
          CGO_ENABLED: '1'
          GOOS: linux
          GOARCH: ${{ inputs.arch }}
        run: |
          go build -o ../KeyboardLayoutCalculator_${{inputs.os}}_${{inputs.arch}}
        working-directory: gui
      - if: ${{env.gogio_target == 'macos'}}
        name: CodeSign
        run: |
          codesign --force --deep --sign - KeyboardLayoutCalculator_${{inputs.os}}_${{inputs.arch}}.app
      - if: ${{env.gogio_target == 'macos'}}
        name: Create DMG
        uses: L-Super/create-dmg-actons@v1.0.2
        with:
          dmg_name: KeyboardLayoutCalculator_${{inputs.os}}_${{inputs.arch}}
          src_dir: KeyboardLayoutCalculator_${{env.gogio_target}}_${{inputs.arch}}.app
      - uses: actions/upload-artifact@v4
        with:
          name: keyboard_layout_calculator_gui_${{ inputs.os }}_${{inputs.arch}}
          path: ./KeyboardLayoutCalculator_*